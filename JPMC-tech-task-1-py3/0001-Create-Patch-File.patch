From 8f18b9029eaaa57c0993cf6872142d6f9dd327d3 Mon Sep 17 00:00:00 2001
From: Shantanu Kale <shantanuskale@hotmail.com>
Date: Mon, 1 Jun 2020 17:21:36 +0530
Subject: [PATCH] Create Patch File

---
 0001-Create-Patch-File.patch | 90 ++++++++++++++++++++++++++++++++++++
 client3.py                   |  2 +-
 client_test.py               | 29 ++++++++++--
 3 files changed, 115 insertions(+), 6 deletions(-)
 create mode 100644 0001-Create-Patch-File.patch

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..e8f2262
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,90 @@
+From be58d4ddc27ccb66ce27831284caf7e2c642a847 Mon Sep 17 00:00:00 2001
+From: Shantanu Kale <shantanuskale@hotmail.com>
+Date: Mon, 1 Jun 2020 17:01:16 +0530
+Subject: [PATCH] Create Patch File
+
+---
+ client3.py     | 12 ++++++++----
+ client_test.py | 13 +++++++++++--
+ 2 files changed, 19 insertions(+), 6 deletions(-)
+
+diff --git a/client3.py b/client3.py
+index f1771c3..8592add 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,25 +35,29 @@ def getDataPoint(quote):
+ 	stock = quote['stock']
+ 	bid_price = float(quote['top_bid']['price'])
+ 	ask_price = float(quote['top_ask']['price'])
+-	price = bid_price
++	price = (bid_price+ask_price)/2
+ 	return stock, bid_price, ask_price, price
+ 
+ def getRatio(price_a, price_b):
+ 	""" Get ratio of price_a and price_b """
+ 	""" ------------- Update this function ------------- """
+ 	""" Also create some unit tests for this function in client_test.py """
+-	return 1
++	if(price_b==0 or price_a==0):
++		return
++	return price_a/price_b
+ 
+ # Main
+ if __name__ == "__main__":
+ 
+ 	# Query the price once every N seconds.
+-	for _ in iter(range(N)):
++	for _ in range(N):
+ 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+ 		""" ----------- Update to get the ratio --------------- """
++		prices={}
+ 		for quote in quotes:
+ 			stock, bid_price, ask_price, price = getDataPoint(quote)
++			prices[stock]=price
+ 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-		print ("Ratio %s" % getRatio(price, price))
++		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
+diff --git a/client_test.py b/client_test.py
+index af2bf26..c6814a9 100644
+--- a/client_test.py
++++ b/client_test.py
+@@ -1,5 +1,5 @@
+ import unittest
+-from client3 import getDataPoint
++from client3 import getDataPoint, getRatio
+ 
+ class ClientTest(unittest.TestCase):
+   def test_getDataPoint_calculatePrice(self):
+@@ -8,6 +8,10 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2)
++
++
+ 
+   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+     quotes = [
+@@ -15,10 +19,15 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2)
+ 
+ 
+   """ ------------ Add more unit tests ------------ """
+-
++  def test_getRatio_checkIfPricesOfAOrBEqualsZero(self):
++    self.assertEqual(getRatio(1,0), None)
++    self.assertEqual(getRatio(0,0), None)
++    self.assertEqual(getRatio(0,1), None)
+ 
+ 
+ if __name__ == '__main__':
+-- 
+2.26.2.windows.1
+
diff --git a/client3.py b/client3.py
index 8592add..1f4b854 100644
--- a/client3.py
+++ b/client3.py
@@ -42,7 +42,7 @@ def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	if(price_b==0 or price_a==0):
+	if(price_b==0):
 		return
 	return price_a/price_b
 
diff --git a/client_test.py b/client_test.py
index c6814a9..12aa898 100644
--- a/client_test.py
+++ b/client_test.py
@@ -24,11 +24,30 @@ class ClientTest(unittest.TestCase):
 
 
   """ ------------ Add more unit tests ------------ """
-  def test_getRatio_checkIfPricesOfAOrBEqualsZero(self):
-    self.assertEqual(getRatio(1,0), None)
-    self.assertEqual(getRatio(0,0), None)
-    self.assertEqual(getRatio(0,1), None)
-
+  def test_getRatio_priceBEqualsZero(self):
+    price_a=125.61
+    price_b=0
+    self.assertIsNone(getRatio(price_a, price_b))
+  
+  def test_getRatio_priceAEqualsZero(self):
+    price_a=0
+    price_b=513.25
+    self.assertEqual(getRatio(price_a,price_b), 0)
+
+  def test_getRatio_lessThanOne(self):
+    price_a=259.36
+    price_b=186.52
+    self.assertLess(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_greaterThanOne(self):
+    price_a=189.35
+    price_b=75.61
+    self.assertGreater(getRatio(price_a, price_b), 1) 
+
+  def test_getRatio_exactlyOne(self):
+    price_a=158.49
+    price_b=158.49
+    self.assertEqual(getRatio(price_a,price_b), 1)
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.26.2.windows.1

